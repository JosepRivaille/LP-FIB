<<
/* parser.dlg -- DLG Description of scanner
 *
 * Generated from: models.g
 *
 * Terence Parr, Will Cohen, and Hank Dietz: 1989-2001
 * Purdue University Electrical Engineering
 * With AHPCRC, University of Minnesota
 * ANTLR Version 1.33MR33
 */

#define ANTLR_VERSION	13333
#include "pcctscfg.h"
#include "pccts_stdio.h"

#include <string>
#include <iostream>
#include <exception>
using namespace std;

// struct to store information about tokens
struct Attrib {
  string kind;
  string text;
};

// function to fill token information (predeclaration)
void zzcr_attr(Attrib *attr, int type, char *text);

// fields for AST nodes
#define AST_FIELDS string kind; string text;
#include "ast.h"

// macro to create a new AST node (and function predeclaration)
#define zzcr_ast(as,attr,ttype,textt) as=createASTnode(attr,ttype,textt)
AST* createASTnode(Attrib* attr, int ttype, char *textt);
#include "antlr.h"
#include "ast.h"
#include "tokens.h"
#include "dlgdef.h"
LOOKAHEAD

void
#ifdef __USE_PROTOS
zzerraction(void)
#else
zzerraction()
#endif
{
	(*zzerr)("invalid token");
	zzadvance();
	zzskip();
}
>>


%%START

@
	<<
		NLA = 1;
	>>

start
	<<
		NLA = START;
	>>

\+
	<<
		NLA = PAR;
	>>

#
	<<
		NLA = EXC;
	>>

\|
	<<
		NLA = INC;
	>>

;
	<<
		NLA = SEQ;
	>>

\(
	<<
		NLA = LPAR;
	>>

\)
	<<
		NLA = RPAR;
	>>

end
	<<
		NLA = END;
	>>

connection
	<<
		NLA = CONNECTION;
	>>

file
	<<
		NLA = FILEP;
	>>

\<\- | \-\>
	<<
		NLA = FILEDIR;
	>>

QUERIES
	<<
		NLA = QUERIES;
	>>

critical
	<<
		NLA = CRITICAL;
	>>

difference
	<<
		NLA = DIFFERENCE;
	>>

correctfile
	<<
		NLA = CORRECTFILE;
	>>

[a-zA-Z][a-zA-Z0-9]*
	<<
		NLA = ID;
	>>

[\ \t\n\s]
	<<
		NLA = SPACE;
    zzskip();   
	>>

%%
